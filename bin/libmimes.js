// Generated by LiveScript 1.4.0
var http, socket, DaemonPlugin, MimesDaemon;
http = require('http');
socket = require('socket.io');
DaemonPlugin = global.DaemonPlugin;
MimesDaemon = (function(superclass){
  var extensions, handlers, prototype = extend$((import$(MimesDaemon, superclass).displayName = 'MimesDaemon', MimesDaemon), superclass).prototype, constructor = MimesDaemon;
  prototype.description = 'Provides filetype detection and executable registration methods';
  prototype.enabled = true;
  prototype.verify = function(){
    return true;
  };
  extensions = {
    js: 'javascript',
    rb: 'ruby',
    ls: 'livescript',
    coffee: 'coffee-script',
    p6: 'perl6',
    pl: 'perl5',
    py: 'python',
    sh: 'shell',
    bat: 'batch',
    cmd: 'batch'
  };
  handlers = {
    javascript: 'node',
    'coffee-script': 'coffee',
    livescript: 'lsc',
    perl5: 'perl',
    bat: ['cmd', '/C'],
    cmd: MimesDaemon.bat
  };
  prototype.configure = function(it){
    return it.option('-x, --executable <program>', 'uses the specified executable');
  };
  prototype.initialize = function(){};
  function MimesDaemon(){
    this.install();
  }
  return MimesDaemon;
}(DaemonPlugin));
module.exports = MimesDaemon;
function extend$(sub, sup){
  function fun(){} fun.prototype = (sub.superclass = sup).prototype;
  (sub.prototype = new fun).constructor = sub;
  if (typeof sup.extended == 'function') sup.extended(sub);
  return sub;
}
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}